#!/usr/bin/python3




import os
import requests
import subprocess
import smbus
import time
import sys
import os
from rich.console import Console
from rich.table import Table

bus = smbus.SMBus(1)
addressMega = 0x08
clear = lambda: os.system('clear')
console = Console()
from sshkeyboard import listen_keyboard

timeout = 1

left = 0
right = 0
negLeft = 0
negRight = 0
directionLeft = " "
directionRight = " "
clear()
print ("\n\n")
print (" ████████╗██████╗ ██╗██████╗ ██╗  ██╗ █████╗ ███████╗ █████╗ ██████╗ ██████╗ ")
print (" ╚══██╔══╝██╔══██╗██║██╔══██╗██║  ██║██╔══██╗╚══███╔╝██╔══██╗██╔══██╗██╔══██╗")
print ("    ██║   ██████╔╝██║██████╔╝███████║███████║  ███╔╝ ███████║██████╔╝██║  ██║")
print ("    ██║   ██╔══██╗██║██╔═══╝ ██╔══██║██╔══██║ ███╔╝  ██╔══██║██╔══██╗██║  ██║")
print ("    ██║   ██║  ██║██║██║     ██║  ██║██║  ██║███████╗██║  ██║██║  ██║██████╔╝")
print ("    ╚═╝   ╚═╝  ╚═╝╚═╝╚═╝     ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ")
time.sleep(1.75)
clear()
table = Table(show_header=True, header_style='bold #2070b2',
              title='\n\n[bold][#2070b2]Trip[/#2070b2][#f8e020]Hazard[/#f8e020] Fingerboard 2.2\n')

table.add_column('[white]Left Motors             ', justify='center')
table.add_column('[white]Right Motors             ', justify='center')
table.add_column('[white]Command             ', justify='center')


table.add_row('0', '0', '[green]Stopped')
console.print(table)



#console = Console()
#console.print(table)

def writeData(value):
        byteValue = StringToBytes(value)
        bus.write_i2c_block_data(addressMega,0x00,byteValue) #first byte is 0=command >
        return -1

def StringToBytes(val):
            retVal = []
            for c in val:
                    retVal.append(ord(c))
            return retVal


def press(key):

        global left
        global right
        global directionLeft
        global directionRight

#    print(f"'{key}' pressed")




        if key == "j":
           clear()
           table.add_row('255', '255', '[#ff0000]JUMP!')
           console.print(table)
           writeData("jump")
           


        if key == "p":
           clear()
           left = 255
           right = 255

           if left >= 0:
              directionLeft = "forward"
           if right >= 0:
              directionRight = "forward"
           if left < 0:
              directionLeft = "reverse"
           if right < 0:
              directionRight = "reverse"

           negLeft = abs(left)
           negRight = abs(right)

           table.add_row(str(left), str(right), '[#ff0000]FULL POWER!!')
           console.print(table)
           
           writeData("motor1;" + directionRight + ";" + str(negRight))
           writeData("motor3;" + directionRight + ";" + str(negRight))
           writeData("motor2;" + directionLeft + ";" + str(negLeft))
           writeData("motor4;" + directionLeft + ";" + str(negLeft))




        if key == "r":
           if left <  right:
              right = left
           if right < left:
              left = right



           negLeft = abs(left)
           negRight = abs(right)

           clear()
           table.add_row(str(left), str(right), '[#ffffff]Straiten')
           console.print(table)
           
           writeData("motor1;" + directionRight + ";" + str(negRight))
           writeData("motor3;" + directionRight + ";" + str(negRight))
           writeData("motor2;" + directionLeft + ";" + str(negLeft))
           writeData("motor4;" + directionLeft + ";" + str(negLeft))

        if key == "e":

           left = left + 24
           right = right + 24

           if left >= 255:
              left = 255

           if right >= 255:
              right = 255

           if left <= -255:
              left = -255

           if right <= -255:
              right = right -255

           if left >= 0:
              directionLeft = "forward"
           if right >= 0:
              directionRight = "forward"
           if left < 0:
              directionLeft = "reverse"
           if right < 0:
              directionRight = "reverse"



           negLeft = abs(left)
           negRight = abs(right)

         
           clear()
           table.add_row(str(left), str(right), '[#ffffff]Forward')
           console.print(table)
           
           writeData("motor1;" + directionRight + ";" + str(negRight))
           writeData("motor3;" + directionRight + ";" + str(negRight))
           writeData("motor2;" + directionLeft + ";" + str(negLeft))
           writeData("motor4;" + directionLeft + ";" + str(negLeft))




        if key == "d":

           left = left - 24
           right = right - 24

           if left >= 255:
              left = 255

           if right >= 255:
              right = 255

           if left <= -255:
              left = -255

           if right <= -255:
              right = right -255

           if left >= 0:
              directionLeft = "forward"
           if right >= 0:
              directionRight = "forward"
           if left < 0:
              directionLeft = "reverse"
           if right < 0:
              directionRight = "reverse"

           negLeft = abs(left)
           negRight = abs(right)

    
           clear()
           table.add_row(str(left), str(right), '[#ffffff]Reverse')
           console.print(table)
           
           writeData("motor1;" + directionRight + ";" + str(negRight))
           writeData("motor3;" + directionRight + ";" + str(negRight))
           writeData("motor2;" + directionLeft + ";" + str(negLeft))
           writeData("motor4;" + directionLeft + ";" + str(negLeft))

        if key == "f":

           left = left - 24
           right = right + 24

           if left >= 255:
              left = 255

           if right >= 255:
              right = 255

           if left <= -255:
              left = -255

           if right <= -255:
              right = right -255
              directionRight = "reverse"
           if left >= 0:
              directionLeft = "forward"
           if right >= 0:
              directionRight = "forward"
           if left < 0:
              directionLeft = "reverse"
           if right < 0:
              directionRight = "reverse"

           negLeft = abs(left)
           negRight = abs(right)

           clear()
           table.add_row(str(left), str(right), '[#ffffff]Turn Right')
           console.print(table)
         
           writeData("motor1;" + directionRight + ";" + str(negRight))
           writeData("motor3;" + directionLeft + ";" + str(negLeft))
           writeData("motor2;" + directionLeft + ";" + str(negLeft))
           writeData("motor4;" + directionRight + ";" + str(negRight))


        if key == "a":

           left = left + 24
           right = right - 24

           if left >= 255:
              left = 255

           if right >= 255:
              right = 255


           if left <= -255:
              left = -255

           if right <= -255:
              right = right -255

           if right <= -255:
              right = right -255

           if left >= 0:
              directionLeft = "forward" 
           if right >= 0: 
              directionRight = "forward"
           if left < 0:
              directionLeft = "reverse"
           if right < 0:
              directionRight = "reverse"


           negLeft = abs(left)
           negRight = abs(right)
          
           clear()
           table.add_row(str(left), str(right), '[#ffffff]Turn Left')
           console.print(table)
           
           writeData("motor1;" + directionRight + ";" + str(negRight))
           writeData("motor3;" + directionLeft + ";" + str(negLeft))
           writeData("motor2;" + directionLeft + ";" + str(negLeft))
           writeData("motor4;" + directionRight + ";" + str(negRight))



        if key == "space":
           directionLeft = "forward"
           directionRight = "forward"
           right = 0
           left = 0

           negLeft = abs(left)
           negRight = abs(right)
           
           clear()
           table.add_row('0', '0', '[green]Stopped')
           console.print(table)
         

           writeData("allmotors;stop")


        if key == "1":

           clear()
           table.add_row(str(left), str(right), '[yellow]Led Pattern: [#31f7d9]rgbShine')
           console.print(table)
           
           writeData("rgbShine;" + "on" )
           key = ""

        if key == "0":

           clear()
           table.add_row(str(left), str(right), '[#31f7d9]LEDs Off')
           console.print(table)
           
           writeData ("ledsOff")

        if key == "2":

           clear()
           table.add_row(str(left), str(right), '[yellow]Led Pattern: [#31f7d9]rgbPolice')
           console.print(table)
           
           writeData("rgbPolice;" + "on" )
       

        if key == "3":

           clear()
           table.add_row(str(left), str(right), '[yellow]Led Pattern: [#31f7d9]rgbHoodlight')
           console.print(table)
           
           writeData("rgbHoodlight;" + "on")
       

        if key == "b":

           clear()
           table.add_row(str(left), str(right), '[#df75f4]Beep')
           console.print(table)
           
           writeData("beep" )
       

        if key == "4":

           clear()
           table.add_row(str(left), str(right), '[yellow]Led Pattern: [#31f7d9]rgbHazard')
           console.print(table)
           
           writeData("rgbHazard;" + "on" )
       

        if key == "5":

           clear()
           table.add_row(str(left), str(right), '[yellow]Led Pattern: [#31f7d9]rgbrgbKnightrider')
           console.print(table)
           
           writeData("rgbKnightRider;" + "on" )

        if key == "6": subprocess.run(["mpg123", "-f 16000", "/usr/local/snd/howdy.mp3"])

        if key == "7":

           clear()
           table.add_row(str(left), str(right), '[white]Sound: [#31f7d9]Bullshit')
           console.print(table)
           
           res = os.system('mpg123 /usr/local/snd/bullshit.mp3')


        if key == "8":
          
           clear()
           table.add_row(str(left), str(right), '[white]Headlight: [green]ON')
           console.print(table)
           
           writeData("lighton" )
       

        if key == "9":
          
           clear()
           table.add_row(str(left), str(right), '[white]Headlight: [red]off')
           console.print(table)
           
           writeData("lightoff" )



listen_keyboard(
         on_press=press,
    )
